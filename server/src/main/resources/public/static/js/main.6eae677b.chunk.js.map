{"version":3,"sources":["views/Tutorial.jsx","export/header.js","export/export.js","actions/DashBoard.jsx","views/Board.jsx","actions/History.jsx","actions/index.jsx","views/History.jsx","views/Activity.jsx","routes/route.jsx","views/Welcome.jsx","routes/allRoutes.jsx","views/AddLog.jsx","views/Duration.jsx","utils.js","views/Stopwatch.jsx","actions/StopWatch.jsx","useAnimationFrame.js","views/Sidebar.jsx","views/PopoverProfile.jsx","views/Appbar.jsx","theme.js","App.js","serviceWorker.js","reducers/activityTypeList.jsx","reducers/History.jsx","reducers/DashBoard.jsx","reducers/StopWatch.jsx","reducers/index.jsx","middleware/index.jsx","index.js"],"names":["tutorialSteps","useStyles","makeStyles","theme","root","width","maxWidth","flexGrow","header","display","alignItems","height","paddingLeft","spacing","backgroundColor","palette","background","default","img","Tutorial","props","classes","useTheme","React","useState","activeStep","setActiveStep","maxSteps","length","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","style","textAlign","DialogContent","className","alt","src","MobileStepper","steps","position","variant","nextButton","Button","size","onClick","prevActiveStep","disabled","direction","backButton","DialogActions","color","html","content","element","completeHTML","outerHTML","blob","Blob","type","duration","moment","localStorage","getItem","format","FileSaver","saveAs","setDashBoard","dashBoardData","loadDashBoard","userID","token","dispatch","tableIcons","SortArrow","forwardRef","ref","ArrowDownward","Board","flipOpen","setState","state","handleClick","event","initialize","anchorEl","currentTarget","handleProfileClose","exportReport","bind","render","handleInputChange","handleSelectAll","submit","activityTypeList","flag","filterList","select","Export","this","reportElement","each","name","target","value","checked","map","activityType","tableData","data","activityTypeName","activityTypeInput","push","updateDashBoard","white","exportButton","startIcon","borderColor","marginLeft","exportText","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Checkbox","onChange","key","totalTime","minWidth","chartType","loader","pieData","options","chartArea","left","right","title","tooltip","trigger","legend","legendTextStyle","rootProps","icons","columns","field","defaultSort","sortDirection","search","paging","toolbar","sorting","tableLayout","Component","withStyles","fontSize","opacity","top","withTheme","connect","withRouter","setHistory","logHistory","loadLogHistory","loadActivityTypeList","setActivityTypeList","Add","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","SaveAlt","Filter","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","ThirdStateCheck","Remove","ViewColumn","History","startTime","endTime","editComponent","Input","defaultValue","e","autoFocus","Select","enable","MenuItem","initialEditValue","utils","DateFnsUtils","DateTimePicker","maxDate","toDate","localization","body","editRow","deleteText","editable","onRowDelete","oldData","Promise","resolve","reject","removeLog","id","onRowUpdate","newData","alert","setTimeout","editLog","logID","description","Activity","isEditable","rowData","isDeletable","onRowAdd","addActivityType","private","editActivityType","removeActivityType","appRoutes","path","component","targetActivityTypeName","isEnable","isPrivate","tutorialOpen","setTutorialOpen","AllRoutes","prop","AddLog","currentTime","subtract","prevProps","newLog","add","FormControl","fullWidth","required","InputLabel","htmlFor","labelId","Grid","container","item","xs","DatePicker","autoOk","label","date","year","month","TimePicker","minutesStep","time","startDate","endDate","isSame","Duration","minimumDate","maximumDate","updateDates","updateHistory","minDate","readableCounter","secs","seconds","Number","Math","floor","v","i","join","stopWatchTime","updateTime","setTime","progress","setProgress","isStartClicked","setStartClicked","isStopClicked","setStopClicked","callback","requestRef","useRef","previousTimeRef","_loop","current","deltaTime","requestAnimationFrame","stop","cancelAnimationFrame","useEffect","useAnimationFrame","delta","prevTime","startTimer","stopTimer","UpdateTime","useCallback","toFixed","CircularProgress","thickness","cx","cy","r","viewBox","fillRule","d","openAddLogDialog","drawer","breakpoints","up","flexShrink","mixins","drawerPaper","Sidebar","logDuration","setLogDuration","addLogOpen","setAddLogOpen","durationOpen","setDurationOpen","stopwatchOpen","setStopwatchOpen","handleAddLogOpen","history","useHistory","List","Slide","in","timeout","appear","enter","exit","ListItem","Divider","button","ListItemIcon","ListItemText","primary","margin","href","rel","Drawer","paper","PopoverProfile","displayName","email","Avatar","clear","window","location","appBar","zIndex","menuButton","marginRight","iconColor","toolBar","justifyContent","popover","timeString","anchorProfile","setAnchorProfile","AppBar","Toolbar","IconButton","aria-label","edge","handleDrawerToggle","Boolean","createMuiTheme","main","contrastText","secondary","App","initConfig","pkceMethod","onLoad","mobileOpen","setItem","searchParams","URLSearchParams","get","amsURL","process","encodeURIComponent","replace","enterTimelog","ThemeProvider","CssBaseline","hostname","match","activityTypeListReducer","action","HistoryReducer","defaultState","DashBoardReducer","StopWatchReducer","rootReducer","combineReducers","API_HOST","getHeaders","getBody","str","len","toString","getHour","getMinute","myMiddleware","store","next","headers","axios","post","then","response","catch","err","console","log","logItemList","totalTimeString","parseInt","split","dataMap","Object","keys","forEach","timeLength","percentage","result","myStore","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6eae677b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  MobileStepper\r\n} from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst tutorialSteps = [\r\n  '/tutorial1.jpg', '/tutorial2.jpg',\r\n  '/tutorial3.jpg', '/tutorial4.jpg',\r\n  '/tutorial5.jpg', '/tutorial6.jpg',\r\n  '/tutorial7.jpg', '/tutorial8.jpg'\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width : '100%',\r\n    maxWidth: '32vw',\r\n    flexGrow: 1\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default\r\n  },\r\n  img: {\r\n    maxWidth: '32vw',\r\n    display: 'block',\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nexport default function Tutorial(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={props.open} \r\n      onClose={props.handleClose} \r\n      aria-labelledby=\"form-dialog-title\" \r\n      maxWidth='md'>\r\n        <DialogTitle style={{textAlign:\"center\"}}>How To Use Timelog</DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.root}>\r\n            <img\r\n              className={classes.img}\r\n              alt=\"tutorialStep\"\r\n              src={tutorialSteps[activeStep]}\r\n            />\r\n            <MobileStepper\r\n              steps={maxSteps}\r\n              position=\"static\"\r\n              variant=\"dots\"\r\n              activeStep={activeStep}\r\n              nextButton={\r\n                <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n                  Next\r\n                  {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                </Button>\r\n              }\r\n              backButton={\r\n                <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                  {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                  Back\r\n                </Button>\r\n              }\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"secondary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}","function html (content) {\r\n  return `\r\n  <html lang=\"en\"\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <title>timelog</title>\r\n    <link\r\n    rel=\"stylesheet\"\r\n    href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n    />\r\n    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n    <link href=\"/js/app.js\" rel=\"preload\" as=\"script\"><link href=\"/js/chunk-vendors.js\" rel=\"preload\" as=\"script\"><style type=\"text/css\">\r\n    <style type=\"text/css\">\r\n      html, body {\r\n        height: 100%;\r\n        margin: 0;\r\n      }\r\n      body {\r\n        background-color: #3C3D42;\r\n      }\r\n      tr {\r\n        color: #FFFFFF;\r\n      }\r\n      .board-text {\r\n        text-align: center;\r\n        color: #FFFFFF;\r\n      }\r\n      .board-split {\r\n        margin-top: 50px;\r\n      }\r\n      .export-button {\r\n        position: absolute;\r\n        left: 0;\r\n      }\r\n    </style>\r\n    <style type=\"text/css\">/* Chart.js */\r\n    /*\r\n    * DOM element rendering detection\r\n    * https://davidwalsh.name/detect-node-insertion\r\n    */\r\n    @keyframes chartjs-render-animation {\r\n    from { opacity: 0.99; }\r\n    to { opacity: 1; }\r\n    }\r\n\r\n    .chartjs-render-monitor {\r\n    animation: chartjs-render-animation 0.001s;\r\n    }\r\n\r\n    /*\r\n    * DOM element resizing detection\r\n    * https://github.com/marcj/css-element-queries\r\n    */\r\n    .chartjs-size-monitor,\r\n    .chartjs-size-monitor-expand,\r\n    .chartjs-size-monitor-shrink {\r\n    position: absolute;\r\n    direction: ltr;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    overflow: hidden;\r\n    pointer-events: none;\r\n    visibility: hidden;\r\n    z-index: -1;\r\n    }\r\n\r\n    .chartjs-size-monitor-expand > div {\r\n    position: absolute;\r\n    width: 1000000px;\r\n    height: 1000000px;\r\n    left: 0;\r\n    top: 0;\r\n    }\r\n\r\n    .chartjs-size-monitor-shrink > div {\r\n    position: absolute;\r\n    width: 200%;\r\n    height: 200%;\r\n    left: 0;\r\n    top: 0;\r\n    }\r\n    </style>\r\n    <style data-jss=\"\" data-meta=\"MuiTable\">\r\n.MuiTable-root {\r\n  width: 100%;\r\n  display: table;\r\n  border-spacing: 0;\r\n  border-collapse: collapse;\r\n}\r\n.MuiTable-root caption {\r\n  color: rgba(0, 0, 0, 0.54);\r\n  padding: 16px;\r\n  font-size: 0.875rem;\r\n  text-align: left;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  font-weight: 400;\r\n  line-height: 1.43;\r\n  caption-side: bottom;\r\n  letter-spacing: 0.01071em;\r\n}\r\n.MuiTable-stickyHeader {\r\n  border-collapse: separate;\r\n}\r\n</style>\r\n<style data-jss=\"\" data-meta=\"MuiTableBody\">\r\n.MuiTableBody-root {\r\n  display: table-row-group;\r\n}\r\n</style>\r\n<style data-jss=\"\" data-meta=\"MuiTableCell\">\r\n.MuiTableCell-root {\r\n  display: table-cell;\r\n  padding: 16px;\r\n  font-size: 0.875rem;\r\n  text-align: left;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  font-weight: 400;\r\n  line-height: 1.43;\r\n  border-bottom: 1px solid\r\n    rgba(224, 224, 224, 1);\r\n  letter-spacing: 0.01071em;\r\n  vertical-align: inherit;\r\n}\r\n.MuiTableCell-head {\r\n  color: #FFFFFF;\r\n  font-weight: 500;\r\n  line-height: 1.5rem;\r\n}\r\n.MuiTableCell-body {\r\n  color: rgba(0, 0, 0, 0.87);\r\n}\r\n.MuiTableCell-footer {\r\n  color: rgba(0, 0, 0, 0.54);\r\n  font-size: 0.75rem;\r\n  line-height: 1.3125rem;\r\n}\r\n.MuiTableCell-sizeSmall {\r\n  padding: 6px 24px 6px 16px;\r\n}\r\n.MuiTableCell-sizeSmall:last-child {\r\n  padding-right: 16px;\r\n}\r\n.MuiTableCell-sizeSmall.MuiTableCell-paddingCheckbox {\r\n  width: 24px;\r\n  padding: 0 12px 0 16px;\r\n}\r\n.MuiTableCell-sizeSmall.MuiTableCell-paddingCheckbox:last-child {\r\n  padding-left: 12px;\r\n  padding-right: 16px;\r\n}\r\n.MuiTableCell-sizeSmall.MuiTableCell-paddingCheckbox > * {\r\n  padding: 0;\r\n}\r\n.MuiTableCell-paddingCheckbox {\r\n  width: 48px;\r\n  padding: 0 0 0 4px;\r\n}\r\n.MuiTableCell-paddingCheckbox:last-child {\r\n  padding-left: 0;\r\n  padding-right: 4px;\r\n}\r\n.MuiTableCell-paddingNone {\r\n  padding: 0;\r\n}\r\n.MuiTableCell-paddingNone:last-child {\r\n  padding: 0;\r\n}\r\n.MuiTableCell-alignLeft {\r\n  text-align: left;\r\n}\r\n.MuiTableCell-alignCenter {\r\n  text-align: center;\r\n}\r\n.MuiTableCell-alignRight {\r\n  text-align: right;\r\n  flex-direction: row-reverse;\r\n}\r\n.MuiTableCell-alignJustify {\r\n  text-align: justify;\r\n}\r\n.MuiTableCell-stickyHeader {\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n  position: sticky;\r\n  background-color: #fafafa;\r\n}\r\n</style>\r\n<style data-jss=\"\" data-meta=\"MuiTableFooter\">\r\n.MuiTableFooter-root {\r\n  display: table-footer-group;\r\n}\r\n</style>\r\n<style data-jss=\"\" data-meta=\"MuiTableHead\">\r\n.MuiTableHead-root {\r\n  display: table-header-group;\r\n}\r\n</style>\r\n<style data-jss=\"\" data-meta=\"MuiTableRow\">\r\n.MuiTableRow-root {\r\n  color: inherit;\r\n  display: table-row;\r\n  outline: 0;\r\n  vertical-align: middle;\r\n}\r\n.MuiTableRow-root.MuiTableRow-hover:hover {\r\n  background-color: rgba(0, 0, 0, 0.04);\r\n}\r\n.MuiTableRow-root.Mui-selected, .MuiTableRow-root.Mui-selected:hover {\r\n  background-color: rgba(245, 0, 87, 0.08);\r\n}\r\n</style>\r\n<style data-jss=\"\" data-meta=\"MuiTableSortLabel\">\r\n.MuiTableSortLabel-root {\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  flex-direction: inherit;\r\n  justify-content: flex-start;\r\n}\r\n.MuiTableSortLabel-root:focus {\r\n  color: rgba(0, 0, 0, 0.54);\r\n}\r\n.MuiTableSortLabel-root:hover {\r\n  color: #FFFFFF;\r\n}\r\n.MuiTableSortLabel-root.MuiTableSortLabel-active {\r\n  color: rgba(0, 0, 0, 0.87);\r\n}\r\n.MuiTableSortLabel-root.MuiTableSortLabel-active.MuiTableSortLabel-root.MuiTableSortLabel-active .MuiTableSortLabel-icon {\r\n  color: rgba(0, 0, 0, 0.54);\r\n  opacity: 1;\r\n}\r\n.MuiTableSortLabel-root:hover .MuiTableSortLabel-icon {\r\n  opacity: 0.5;\r\n}\r\n.MuiTableSortLabel-icon {\r\n  opacity: 0;\r\n  font-size: 18px;\r\n  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,transform 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n  margin-left: 4px;\r\n  user-select: none;\r\n  margin-right: 4px;\r\n}\r\n.MuiTableSortLabel-iconDirectionDesc {\r\n  transform: rotate(0deg);\r\n}\r\n.MuiTableSortLabel-iconDirectionAsc {\r\n  transform: rotate(180deg);\r\n}\r\ntable {\r\n  border: solid;\r\n  border-color: #FFFFFF;\r\n  color: #FFFFFF;\r\n}\r\ntr {\r\n  color: #FFFFFF;\r\n}\r\n.board-text {\r\n  text-align: center;\r\n}\r\n.board-split {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 50px; \r\n}\r\n.export-button {\r\n  position: absolute;\r\n  left: 0;\r\n}\r\n.reactgooglegraph-1{\r\n  width: 80%;\r\n}\r\n.chart{\r\n  width: 50%;\r\n}\r\n.table{\r\n  margin-left: 5%;\r\n  width: 40%;\r\n}\r\n\r\n</style>\r\n  </head>\r\n  <body>\r\n  ${content}\r\n  </body>\r\n  </html>`\r\n}\r\n\r\nexport default html\r\n","import html from './header.js'\r\nimport FileSaver from 'file-saver'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  exportHTML (element) {\r\n    const completeHTML = html(element.outerHTML)\r\n    var blob = new Blob([completeHTML], { type: 'text/plain;charset=utf-8' })\r\n    var dateFormat = \"YYYYMMDD\"\r\n    var duration = moment(localStorage.getItem(\"startDate\")).format(dateFormat) + \"_\" +\r\n                   moment(localStorage.getItem(\"endDate\")).format(dateFormat)\r\n    FileSaver.saveAs(blob, duration + \".html\")\r\n  }\r\n}\r\n","export function setDashBoard(dashBoardData) {\r\n  return {\r\n    type: \"SET_DASH_BOARD\",\r\n    dashBoardData: dashBoardData\r\n  }\r\n}\r\n\r\nexport function loadDashBoard(userID, token) {\r\n  return {\r\n    type: \"LOAD_DASH_BOARD\",\r\n    userID: userID,\r\n    token: token,\r\n    setDashBoard: (dashBoardData, dispatch) => dispatch(setDashBoard(dashBoardData))\r\n  }\r\n}\r\n\r\nexport function updateDashBoard(userID, token, filterList) {\r\n  return {\r\n    type: \"UPDATE_DASH_BOARD\",\r\n    userID: userID,\r\n    token: token,\r\n    filterList: filterList,\r\n    setDashBoard: (dashBoardData, dispatch) => dispatch(setDashBoard(dashBoardData))\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport Chart from \"react-google-charts\";\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport \"./Board.css\";\r\nimport Export from '../export/export.js';\r\nimport { connect } from 'react-redux';\r\nimport MaterialTable from \"material-table\";\r\nimport Popover from '@material-ui/core/Popover';\r\nimport moment from \"moment\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { updateDashBoard } from 'actions/DashBoard';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ArrowDownward } from '@material-ui/icons';\r\nimport { forwardRef } from 'react'\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    width : '100%',\r\n    maxWidth: '32vw',\r\n    flexGrow: 1\r\n  },\r\n  exportText: {\r\n    fontSize: '10pt',\r\n    color:'#FFFFFF',\r\n    opacity: 0\r\n  },\r\n  exportButton: {\r\n    position: 'absolute',\r\n    top: '5%',\r\n    '&:hover p': { \r\n      opacity: 1,\r\n    }\r\n  }\r\n});\r\n\r\nconst tableIcons = {\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />)\r\n};\r\n\r\nclass Board extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n    this.exportReport = this.exportReport.bind(this)\r\n    this.render = this.render.bind(this)\r\n    this.handleInputChange= this.handleInputChange.bind(this);\r\n    this.handleSelectAll= this.handleSelectAll.bind(this);\r\n    this.submit = this.submit.bind(this)\r\n    this.initialize = this.initialize.bind(this)\r\n    this.state = { \r\n      anchorEl: null, \r\n      open: false,\r\n      activityTypeList: [],\r\n      flag: true,\r\n      filterList: [],\r\n      select: false,\r\n       };\r\n  }\r\n\r\n  exportReport() {\r\n    Export.exportHTML(this.reportElement)\r\n  };\r\n\r\n  flipOpen = () => this.setState({ ...this.state, open: !this.state.open });\r\n  handleClick = event => {\r\n    this.initialize();\r\n    this.state.anchorEl\r\n      ? this.setState({ anchorEl: null })\r\n      : this.setState({ anchorEl: event.currentTarget });\r\n    this.flipOpen();\r\n  };\r\n  handleProfileClose = event => {\r\n    this.state.anchorEl\r\n      ? this.setState({ anchorEl: null })\r\n      : this.setState({ anchorEl: event.currentTarget });\r\n    this.flipOpen();\r\n  };\r\n\r\n  handleInputChange(event) {   \r\n    for(const each of this.state.activityTypeList) {\r\n        if( each.name === event.target.value) {\r\n          each.checked = event.target.checked;\r\n        }\r\n        if(each.checked === false) {\r\n          this.setState({ select: false})\r\n        }\r\n    }\r\n    for(const each of this.state.activityTypeList) {\r\n      if(each.checked === true) {\r\n        this.setState({ select: true})\r\n      } else {\r\n        this.setState({ select: false})\r\n        break\r\n      }\r\n    }\r\n    this.setState({ activityTypeList: this.state.activityTypeList});\r\n  }\r\n\r\n  handleSelectAll(event) {\r\n    if( this.state.select === false) {\r\n      for(const each of this.state.activityTypeList) {\r\n          each.checked = true;\r\n        }\r\n        this.setState({select: true});\r\n      }else {\r\n        for(const each of this.state.activityTypeList) {\r\n          each.checked = false;\r\n        }\r\n        this.setState({select: false});\r\n      }\r\n      this.setState({ activityTypeList: this.state.activityTypeList});\r\n  }\r\n\r\n  initialize() {\r\n    if(this.state.activityTypeList.length === 0) {\r\n      this.setState({ activityTypeList: [] });\r\n      this.props.activityTypeList.map((activityType) => {\r\n        return this.props.dashBoardData.tableData.map((data)=>{\r\n          if(data.activityTypeName === activityType.name){\r\n            var activityTypeInput = {\r\n            name : activityType.name,\r\n            checked : false}\r\n            this.state.activityTypeList.push(activityTypeInput);\r\n            return true;\r\n          }\r\n          return false;\r\n        })\r\n      })\r\n    } else {\r\n      for(const each of this.state.activityTypeList) {\r\n        each.checked = false;\r\n      }\r\n      this.setState({select: false});\r\n\r\n    }\r\n  };\r\n\r\n  submit() {\r\n    this.setState({ filterList: [] });\r\n    for(const each of this.state.activityTypeList){\r\n      if( each.checked === true){\r\n        this.state.filterList.push(each.name)\r\n      }\r\n    }\r\n    this.props.updateDashBoard(\r\n      localStorage.getItem(\"uid\"),\r\n      null,\r\n      this.state.filterList)  \r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const white = '#FFFFFF';\r\n    return (\r\n        <div>\r\n          <div className={classes.exportButton}>\r\n            <Button startIcon={<GetAppIcon/>}\r\n              onClick={ this.exportReport }\r\n              variant=\"outlined\"\r\n              style={{color: white, borderColor: white, marginLeft:35}}>\r\n              Export\r\n            </Button>\r\n            <p className={classes.exportText}>\r\n                Please adjust the web browser<br></br>\r\n                zoom to 100% for better result\r\n            </p>\r\n          </div>\r\n          <div className=\"selector-button\">\r\n            <Button            \r\n              onClick={event => this.handleClick(event)}\r\n              startIcon={<FilterListIcon/>}\r\n              variant=\"outlined\"\r\n              style={{color: white, borderColor: white, marginLeft:35}}\r\n            >\r\n              Filter\r\n            </Button>\r\n            <div className=\"popover\">\r\n              <Popover \r\n                open={this.state.open}\r\n                anchorEl={this.state.anchorEl}\r\n                onClose={this.handleProfileClose}\r\n                anchorOrigin={{\r\n                  vertical: 'center',\r\n                  horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'center',\r\n                }}\r\n                style={{\r\n                  width: '150%',\r\n                  height: '150%',\r\n                }}\r\n              >\r\n                <div className=\"filter-list\">\r\n                  <Checkbox checked={this.state.select} onChange={this.handleSelectAll}></Checkbox>\r\n                  Select All\r\n                </div>\r\n              {\r\n                this.state.activityTypeList.map((activityType, key) => {\r\n                  return (\r\n                    <div className=\"filter-list\">\r\n                      <Checkbox  value={activityType.name} checked={activityType.checked} onChange={this.handleInputChange}></Checkbox>\r\n                      {activityType.name}\r\n\r\n                    </div>\r\n                    )\r\n                  })\r\n              } \r\n                <center>\r\n                  <Button className=\"filter-btn\" onClick={this.submit} color=\"secondary\">\r\n                    Submit\r\n                  </Button>\r\n                </center>\r\n              </Popover>\r\n            </div>\r\n          </div>\r\n          <div ref={ (element) => {this.reportElement = element} }>\r\n            <h1 className=\"board-title board-text\">\r\n              {`${localStorage.getItem('displayName')}'s Dashboard`}\r\n            </h1>\r\n            <h2 className=\"board-duration board-text\">\r\n              {moment(localStorage.getItem(\"startDate\")).format(\"YYYY/MM/DD\")}\r\n               ~\r\n              {moment(localStorage.getItem(\"endDate\")).format(\"YYYY/MM/DD\")}\r\n            </h2>\r\n            <h3 className=\"board-spent-time board-text\">\r\n              Spent Time : {this.props.dashBoardData.totalTime}\r\n            </h3>\r\n            <div className=\"board-split\">\r\n              <div className=\"chart\">\r\n                <Chart\r\n                  minWidth={''}\r\n                  width={'99%'}\r\n                  height={'50vh'}\r\n                  chartType=\"PieChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={this.props.dashBoardData.pieData}\r\n                  options={{\r\n                    chartArea: {width: '100%', height: '95%', left: '5%', right: '5%'},\r\n                    title: 'DashBoard',\r\n                    tooltip: {trigger:'none'},\r\n                    legend: {position: 'left'},\r\n                    legendTextStyle: {color:white},\r\n                    backgroundColor: '#3C3D42',\r\n                    color: white\r\n                  }}\r\n                  rootProps={{ 'data-testid': '1' }}\r\n                />\r\n              </div>\r\n              <div className=\"table\">\r\n                <MaterialTable title=\"\"\r\n                  icons={ tableIcons }\r\n                  columns={[\r\n                    { title: \"Activity Type\", field: \"activityTypeName\", backgroundColor: '#3C3D42'},\r\n                    { title: \"Spent Time\", field: \"timeLength\", defaultSort:'desc' },\r\n                    { title: \"Percentage\", field: \"percentage\" },\r\n                  ]}\r\n                  data={this.props.dashBoardData.tableData}\r\n                  sortDirection={\"timeLength\"}\r\n                  options={{\r\n                    search: false,\r\n                    paging: false,\r\n                    toolbar: false,\r\n                    sorting: true,\r\n                    tableLayout: \"fixed\"\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    dashBoardData: state.dashBoardData,\r\n    activityTypeList: state.activityTypeList\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updateDashBoard: (userID, token, filterList) => dispatch(updateDashBoard(userID, token, filterList)),\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles,{withTheme: true})(connect(mapStateToProps, mapDispatchToProps)(withRouter(Board)))","export function setHistory(logHistory) {\r\n  return {\r\n      type: \"SET_HISTORY\",\r\n      logHistory: logHistory\r\n  }\r\n}\r\n\r\nexport function loadLogHistory(userID, token) {\r\n  return {\r\n    type: \"LOAD_LOG_HISTORY\",\r\n    userID: userID,\r\n    token: token,\r\n    setHistory: (logHistory, dispatch) => dispatch(setHistory(logHistory))\r\n  }\r\n}\r\n","import { setHistory, loadLogHistory } from './History'\r\nimport { loadDashBoard } from './DashBoard'\r\n\r\nexport function loadActivityTypeList(userID, token) {\r\n    return {\r\n        type: \"LOAD_ACTIVITY_TYPE_LIST\",\r\n        userID: userID,\r\n        token: token,\r\n        setActivityTypeList: (activityTypeList, dispatch) => dispatch(setActivityTypeList(activityTypeList))\r\n    }\r\n}\r\n\r\nexport function setActivityTypeList(activityTypeList) {\r\n    return {\r\n        type: \"SET_ACTIVITY_TYPE_LIST\",\r\n        activityTypeList: activityTypeList\r\n    }\r\n}\r\n\r\nexport function addActivityType(userID, token, activityTypeName, isEnable, isPrivate) {\r\n    return {\r\n        type: \"ADD_ACTIVITY_TYPE\",\r\n        userID: userID,\r\n        token: token,\r\n        activityTypeName: activityTypeName,\r\n        isEnable: isEnable,\r\n        isPrivate: isPrivate,\r\n        loadActivityTypeList: (userID, token, dispatch) => dispatch(loadActivityTypeList(userID, token))\r\n    }\r\n}\r\n\r\nexport function removeActivityType(userID, token, activityTypeName) {\r\n    return {\r\n        type: \"REMOVE_ACTIVITY_TYPE\",\r\n        userID: userID,\r\n        activityTypeName: activityTypeName,\r\n        loadActivityTypeList: (userID, token, dispatch) => dispatch(loadActivityTypeList(userID, token))\r\n    }\r\n}\r\n\r\nexport function editActivityType(userID, token, targetActivityTypeName, activityTypeName, isEnable, isPrivate) {\r\n    return {\r\n        type: \"EDIT_ACTIVITY_TYPE\",\r\n        userID: userID,\r\n        token: token,\r\n        targetActivityTypeName: targetActivityTypeName,\r\n        activityTypeName: activityTypeName,\r\n        isEnable: isEnable,\r\n        isPrivate: isPrivate,\r\n        loadActivityTypeList: (userID, token, dispatch) => dispatch(loadActivityTypeList(userID, token)),\r\n        loadLogHistory: (userID, token, dispatch) => dispatch(loadLogHistory(userID, token)),\r\n        loadDashBoard: (userID, token, dispatch) => dispatch(loadDashBoard(userID, token))\r\n    }\r\n}\r\n\r\nexport function enterTimelog(userID, token) {\r\n    return {\r\n        type: \"ENTER_TIMELOG\",\r\n        userID: userID,\r\n        token: token,\r\n        setActivityTypeList: (activityTypeList, dispatch) => dispatch(setActivityTypeList(activityTypeList)),\r\n        setHistory: (logHistory, dispatch) => dispatch(setHistory(logHistory)),\r\n        loadDashBoard: (userID, token, dispatch) => dispatch(loadDashBoard(userID, token))\r\n    }\r\n}\r\n\r\nexport function newLog(userID, token, title, activityTypeName, startTime, endTime, description) {\r\n  return {\r\n    type: \"NEW_LOG\",\r\n    userID: userID,\r\n    token: token,\r\n    title: title,\r\n    activityTypeName: activityTypeName,\r\n    startTime: startTime,\r\n    endTime: endTime,\r\n    description: description,\r\n    loadLogHistory: (userID, token, dispatch) => dispatch(loadLogHistory(userID, token)),\r\n    loadDashBoard: (userID, token, dispatch) => dispatch(loadDashBoard(userID, token))\r\n  }\r\n}\r\n\r\nexport function removeLog(userID, token, logID) {\r\n  return {\r\n    type: \"REMOVE_LOG\",\r\n    userID: userID,\r\n    token: token,\r\n    logID: logID,\r\n    loadLogHistory: (userID, token, dispatch) => dispatch(loadLogHistory(userID, token)),\r\n    loadDashBoard: (userID, token, dispatch) => dispatch(loadDashBoard(userID, token))\r\n  }\r\n}\r\n\r\nexport function editLog(userID, token, logID, title, activityTypeName, startTime, endTime, description) {\r\n    return {\r\n        type: \"EDIT_LOG\",\r\n        userID: userID,\r\n        token: token,\r\n        logID: logID,\r\n        title: title,\r\n        activityTypeName: activityTypeName,\r\n        startTime: startTime,\r\n        endTime: endTime,\r\n        description: description,\r\n        loadLogHistory: (userID, token, dispatch) => dispatch(loadLogHistory(userID, token)),\r\n        loadDashBoard: (userID, token, dispatch) => dispatch(loadDashBoard(userID, token))\r\n    }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport MaterialTable from \"material-table\"\r\nimport { Input, Select, MenuItem } from \"@material-ui/core\";\r\nimport { forwardRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { removeLog } from 'actions'\r\nimport { editLog } from 'actions'\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from 'moment'\r\n\r\nimport { AddBox, ArrowDownward, Check, ChevronLeft, ChevronRight,\r\n  Clear, DeleteOutline, Edit, FilterList, FirstPage, LastPage,\r\n  Remove, SaveAlt, Search, ViewColumn } from '@material-ui/icons';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nclass History extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      startTime: 0,\r\n      endTime: 0,\r\n      columns: [\r\n        {\r\n          title: \"Title\",\r\n          field: \"title\",\r\n          editComponent: props => (\r\n            <Input defaultValue={props.value} onChange={e => props.onChange(e.target.value)} autoFocus/>\r\n          )\r\n        },\r\n        {\r\n          title: \"Activity Type\",\r\n          field: \"activityTypeName\",\r\n          editComponent: props => (\r\n            <Select\r\n              value={props.value}\r\n              onChange={event => props.onChange(event.target.value)}\r\n            >\r\n              {\r\n                this.props.activityTypeList.map((activityType, key) => {\r\n                    if(activityType.enable !== false) {\r\n                      return (\r\n                          <MenuItem value={activityType.name} key={key}>{activityType.name}</MenuItem>\r\n                      )\r\n                    }\r\n                    else {\r\n                      return 0\r\n                    }\r\n                })\r\n              }\r\n            </Select>\r\n          ),\r\n          initialEditValue: props.value\r\n        },{\r\n          title: \"Start Time\",\r\n          field: \"startTime\",\r\n          defaultSort: \"desc\",\r\n          editComponent: ({ value, onChange }) => (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <DateTimePicker maxDate={moment().toDate()} format=\"yyyy/MM/dd HH:mm\" value={value} onChange={onChange} />\r\n            </MuiPickersUtilsProvider>\r\n          )\r\n        },{\r\n          title: \"End Time\",\r\n          field: \"endTime\",\r\n          editComponent: ({ value, onChange }) => (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <DateTimePicker maxDate={moment().toDate()} format=\"yyyy/MM/dd HH:mm\" value={value} onChange={onChange} />\r\n            </MuiPickersUtilsProvider>\r\n          )\r\n        }\r\n      ],\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MaterialTable title=\"Log History\"\r\n          icons={ tableIcons }\r\n          columns={this.state.columns}\r\n          data={ this.props.logHistory }\r\n          options={{\r\n            search: true,\r\n            paging: false\r\n          }}\r\n          localization={{ body: { editRow: { deleteText: 'Are you sure you want to delete this log?' } } }}\r\n          editable={{\r\n            onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              this.props.removeLog(\r\n                localStorage.getItem(\"uid\"),\r\n                null,\r\n                oldData.id\r\n              )\r\n              resolve();\r\n            }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                if (!newData.title || newData.title === '') {\r\n                  alert(\"Title should not be empty.\")\r\n                  reject()\r\n                }\r\n                else if (moment(newData.endTime) <= moment(newData.startTime)) {\r\n                  alert(\"Start Time should be eariler than End Time.\")\r\n                  reject()\r\n                } \r\n                else {\r\n                   setTimeout(() => {\r\n                    this.props.editLog(\r\n                      localStorage.getItem(\"uid\"),\r\n                      null,\r\n                      oldData.id,              \r\n                      newData.title,\r\n                      newData.activityTypeName,\r\n                      moment(newData.startTime).format(\"YYYY/MM/DD HH:mm\"),\r\n                      moment(newData.endTime).format(\"YYYY/MM/DD HH:mm\"),\r\n                      null\r\n                    )\r\n                    resolve();\r\n                  }, 1000);\r\n                }\r\n              })\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activityTypeList: state.activityTypeList,\r\n    logHistory: state.logHistory\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    removeLog: (userID, token, logID) => {\r\n      dispatch(removeLog(userID, token, logID))\r\n    },\r\n    editLog: (userID, token, logID, title, activityTypeName, startTime, endTime, description) => {\r\n      dispatch(editLog(userID, token, logID, title, activityTypeName, startTime, endTime, description))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(History))\r\n","import React, { Component } from \"react\"\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { forwardRef } from 'react';\r\nimport { editActivityType, addActivityType, removeActivityType } from 'actions';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AddBox, ArrowDownward, Check, ChevronLeft, ChevronRight,\r\n  Clear, DeleteOutline, Edit, FilterList, FirstPage, LastPage,\r\n  Remove, SaveAlt, Search, ViewColumn } from '@material-ui/icons';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nclass Activity extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          title: \"Activity Type\",\r\n          field: \"name\",\r\n          editComponent: props => (\r\n              <Input defaultValue={props.value} onChange={e => props.onChange(e.target.value)} autoFocus/>\r\n          )\r\n        },{\r\n          title: \"Private\",\r\n          field: \"private\",\r\n          type: \"boolean\"\r\n        },{\r\n          title: \"Enable\",\r\n          field: \"enable\",\r\n          type: \"boolean\",\r\n          initialEditValue: 'true'\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MaterialTable title=\"Activity\"\r\n          icons={tableIcons}\r\n          columns={this.state.columns}\r\n          data={this.props.activityTypeList}\r\n          options={{\r\n            search: true,\r\n            sorting: true,\r\n            paging: false\r\n          }}\r\n          localization={{ body: { editRow: { deleteText: 'Are you sure you want to delete this activity?' } } }}\r\n          editable={{\r\n            isEditable: rowData => rowData.name !== \"LabProject\" && rowData.name !== \"LabDuty\",\r\n            isDeletable: rowData => rowData.name !== \"LabProject\" && rowData.name !== \"LabDuty\",\r\n            onRowAdd: newData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  this.props.addActivityType(\r\n                    localStorage.getItem(\"uid\"),\r\n                    null,\r\n                    newData.name,\r\n                    newData.enable,\r\n                    newData.private\r\n                  )\r\n                  resolve();\r\n                }, 1000)\r\n              })\r\n            ,\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  this.props.editActivityType(\r\n                    localStorage.getItem(\"uid\"),\r\n                    null,\r\n                    oldData.name,\r\n                    newData.name,\r\n                    newData.enable,\r\n                    newData.private\r\n                  )\r\n                  resolve();\r\n                }, 1000);\r\n              })\r\n            ,\r\n            onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                this.props.removeActivityType(\r\n                  localStorage.getItem(\"uid\"),\r\n                  null,\r\n                  oldData.name\r\n                )\r\n                resolve();\r\n              }, 1000);\r\n            })\r\n        }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activityTypeList: state.activityTypeList\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    editActivityType: (userID, token, targetActivityTypeName, activityTypeName, isEnable, isPrivate) =>\r\n      dispatch(editActivityType(userID, token, targetActivityTypeName, activityTypeName, isEnable, isPrivate)),\r\n    addActivityType: (userID, token, activityTypeName, isEnable, isPrivate) =>\r\n      dispatch(addActivityType(userID, token, activityTypeName, isEnable, isPrivate)),\r\n    removeActivityType: (userID, token, activityTypeName) =>\r\n      dispatch(removeActivityType(userID, token, activityTypeName))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Activity))\r\n","import Welcome from 'views/Welcome';\r\nimport Board from 'views/Board';\r\nimport History from 'views/History';\r\nimport Activity from 'views/Activity';\r\n\r\nconst appRoutes = [\r\n  {path: \"/board\", name: \"Board\", component: Board},\r\n  {path: \"/history\", name: \"History\", component: History},\r\n  {path: \"/activity\", name: \"Activity\", component: Activity},\r\n  {path: \"/\", name:\"Welcome\", component: Welcome},\r\n]\r\n\r\nexport default appRoutes;\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport './Welcome.css';\r\nimport './Animation.css';\r\nimport Tutorial from './Tutorial'\r\n\r\nexport default function Welcome() {\r\n  const [tutorialOpen, setTutorialOpen] = React.useState(false);\r\n\r\n  const handleTutorialOpen = () => {\r\n    setTutorialOpen(true);\r\n  };\r\n\r\n  const handleTutorialClose = () => {\r\n    setTutorialOpen(false);\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <div className=\"welcome\">\r\n      <div className=\"dropwater-container\">\r\n        <div className=\"dropwater\" ></div>\r\n      </div>\r\n      <div className=\"drop-container\">\r\n        <div className=\"drop\" >\r\n          <img className=\"welcome-logo\" alt=\"welcome\" src=\"WelcomeLOGO.png\"></img>\r\n        </div>\r\n      </div>\r\n      <div className=\"get-started-button fade-in\">   \r\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleTutorialOpen}>\r\n            Get Started\r\n          </Button>\r\n      </div>\r\n    </div>\r\n    <Tutorial className=\"Tutorial\" open={tutorialOpen} handleClose={handleTutorialClose}/>\r\n  </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport appRoutes from \"./route\";\r\n\r\nclass AllRoutes extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Switch>\r\n                    {appRoutes.map((prop, key) => {\r\n                        return (\r\n                                <Route\r\n                                    path={prop.path}\r\n                                    component={prop.component}\r\n                                    key={prop.path}\r\n                                />\r\n                            )\r\n                    })}\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllRoutes\r\n","import React, { Component } from 'react';\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Select,\r\n  MenuItem\r\n} from '@material-ui/core';\r\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport { newLog } from 'actions'\r\n\r\nclass AddLog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      startTime: 0,\r\n      endTime: 0,\r\n      activityTypeName: \"\",\r\n      isEnable: true\r\n    }\r\n    this.submit = this.submit.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentTime = moment();\r\n    const endTime = currentTime.toDate();\r\n    const startTime = currentTime.subtract(this.props.duration, \"seconds\").toDate();\r\n\r\n    this.setState({\r\n      startTime: startTime,\r\n      endTime: endTime\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.duration !== prevProps.duration) {\r\n      this.setState({\r\n        endTime: moment().toDate(),\r\n        startTime: moment().subtract(this.props.duration, \"seconds\").toDate()\r\n      })\r\n    }\r\n  }\r\n\r\n  submit() {\r\n\r\n    if (!this.state.title || this.state.title === ''){\r\n      alert(\"Title should not be empty.\")\r\n      return\r\n    }\r\n\r\n    if (!this.state.activityTypeName || this.state.activityTypeName === ''){\r\n      alert(\"Activity Type is not selected.\")\r\n      return\r\n    }\r\n\r\n    if (moment(this.state.endTime) <= moment(this.state.startTime)){\r\n      alert(\"Start Time should be eariler than End Time.\")\r\n      return\r\n    }\r\n\r\n    const dateFormat = 'YYYY/MM/DD HH:mm'\r\n    // send request to server\r\n    this.props.handleClose()\r\n\r\n    this.props.newLog(\r\n      localStorage.getItem(\"uid\"),\r\n      null,\r\n      this.state.title,\r\n      this.state.activityTypeName,\r\n      moment(this.state.startTime).format(dateFormat),\r\n      moment(this.state.endTime).format(dateFormat),\r\n      this.state.description\r\n    )\r\n\r\n    this.setState({\r\n        title: \"\",\r\n        activityTypeName: \"\",\r\n        startTime: moment().add(-1, \"hours\").toDate(),\r\n        endTime: moment().toDate(),\r\n        description: \"\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"add-log-dialog-title\">Add Log</DialogTitle>\r\n        <DialogContent>\r\n          <form>\r\n            <FormControl fullWidth={true} required={true}>\r\n              <InputLabel htmlFor=\"title\" required={true} >Title</InputLabel>\r\n              <Input id=\"title\" onChange={(e) => {this.setState({title: e.target.value})}} />\r\n            </FormControl>\r\n            <br/><br/>\r\n            <FormControl fullWidth>\r\n            <InputLabel id=\"activity-type-select-label\" required={true} >Activity Type</InputLabel>\r\n              <Select\r\n                labelId=\"activity-type-select-label\"\r\n                id=\"activity-type-select\"\r\n                value={this.state.activityTypeName}\r\n                onChange={(event) => this.setState({activityTypeName: event.target.value})}\r\n              >\r\n                {\r\n                  this.props.activityTypeList.map((activityType, key) => {\r\n                      if(activityType.enable !== false) {\r\n                        return (\r\n                            <MenuItem value={activityType.name} key={key}>{activityType.name}</MenuItem>\r\n                        )\r\n                      }\r\n                      else {\r\n                        return 0\r\n                      }\r\n                  })\r\n                }\r\n              </Select>\r\n            </FormControl>\r\n            <br/><br/>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                  <FormControl className=\"\">\r\n                    <DatePicker\r\n                      autoOk\r\n                      label=\"Start Date\"\r\n                      required={true}\r\n                      maxDate={moment().toDate()}\r\n                      value={this.state.startTime}\r\n                      format=\"yyyy/MM/dd\"\r\n                      onChange={ date => {\r\n                        const startTime = moment(date)\r\n                        const endTime = moment(this.state.endTime)\r\n                        endTime.year(startTime.year())\r\n                          .month(startTime.month())\r\n                          .date(startTime.date())\r\n                        this.setState({\r\n                          startTime: startTime,\r\n                          endTime: endTime\r\n                        })\r\n                      } }\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <FormControl>\r\n                    <TimePicker\r\n                      autoOk\r\n                      label=\"Start Time\"\r\n                      required={true}\r\n                      minutesStep={5}\r\n                      value={this.state.startTime}\r\n                      onChange={ time => {\r\n                        const startTime = moment(time)\r\n                        let endTime = moment(this.state.endTime)\r\n                        const dateFormat = \"yyyy/MM/DD\"\r\n                        const startDate = moment(startTime.format(dateFormat))\r\n                        const endDate = moment(endTime.format(dateFormat))\r\n                        if (startDate.isSame(endDate)) {\r\n                          endTime = moment(time).add(1, \"hours\")\r\n                          this.setState({ endTime: endTime.toDate() })\r\n                        }\r\n                        this.setState({ startTime: time })\r\n                      } }\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <FormControl>\r\n                    <DatePicker\r\n                      autoOk\r\n                      label=\"End Date\"\r\n                      required={true}\r\n                      value={this.state.endTime}\r\n                      format=\"yyyy/MM/dd\"\r\n                      onChange={ date => {\r\n                        const startTime = moment(this.state.startTime)\r\n                        const endTime = moment(date)\r\n                        const dateFormat = \"yyyy/MM/dd\"\r\n                        const startDate = moment(startTime.format(dateFormat))\r\n                        const endDate = moment(endTime.format(dateFormat))\r\n\r\n                        if (startDate < endDate) {\r\n                          startTime.year(endTime.year())\r\n                            .month(endTime.month())\r\n                            .date(endTime.date())\r\n                          this.setState({\r\n                            startTime: startTime\r\n                          })\r\n                        }\r\n                        this.setState({\r\n                          endTime: endTime\r\n                        })\r\n                      } }\r\n                      maxDate={moment().toDate()}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <FormControl>\r\n                    <TimePicker\r\n                      autoOk\r\n                      label=\"End Time\"\r\n                      required={true}\r\n                      minutesStep={5}\r\n                      value={this.state.endTime}\r\n                      onChange={(time) => {this.setState({endTime: time})}}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <br/>\r\n            <FormControl fullWidth={true}>\r\n              <InputLabel htmlFor=\"description\">Description</InputLabel>\r\n              <Input id=\"description\" onChange={(e) => {this.setState({description: e.target.value})}}/>\r\n            </FormControl>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.submit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activityTypeList: state.activityTypeList\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    newLog: (userID, token, title, activityTypeName, startTime, endTime, description) => dispatch(newLog(userID, token, title, activityTypeName, startTime, endTime, description))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddLog)\r\n","import React, { Component } from 'react';\r\nimport { loadDashBoard } from 'actions/DashBoard';\r\nimport { loadLogHistory } from 'actions/History';\r\nimport { connect } from 'react-redux'\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport {\r\n  FormControl,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid\r\n} from '@material-ui/core';\r\n\r\nclass Duration extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      startDate: props.startDate,\r\n      endDate: props.endDate,\r\n      minimumDate: props.startDate,\r\n      maximumDate: props.endDate,\r\n    }\r\n\r\n    this.submit = this.submit.bind(this)\r\n  }\r\n\r\n  submit() {\r\n    // send request to server\r\n    this.props.handleClose()\r\n    this.props.updateDates(this.state.startDate, this.state.endDate)\r\n    this.props.updateHistory(localStorage.getItem(\"uid\"), null)\r\n    this.props.updateDashBoard(localStorage.getItem(\"uid\"), null)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"edit-user-profile\">Duration</DialogTitle>\r\n        <DialogContent>\r\n          <form>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                  <FormControl className=\"\">\r\n                    <DatePicker\r\n                      autoOk\r\n                      label=\"Start Date\"\r\n                      value={this.state.startDate}\r\n                      format=\"yyyy/MM/dd\"\r\n                      onChange={(date) => {\r\n                        this.setState({startDate: date, minimumDate: date})}}\r\n                      maxDate={this.state.maximumDate}    // +\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <FormControl>\r\n                    <DatePicker\r\n                      autoOk\r\n                      label=\"End Date\"\r\n                      value={this.state.endDate}\r\n                      format=\"yyyy/MM/dd\"\r\n                      onChange={(date) => {\r\n                        this.setState({endDate: date, maximumDate: date})}}\r\n                      minDate={this.state.minimumDate}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.props.handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.submit} color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updateDashBoard: (userID, token) => dispatch(loadDashBoard(userID, token)),\r\n    updateHistory: (userID, token) => dispatch(loadLogHistory(userID, token))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Duration)\r\n","export const readableCounter = (secs) => {\r\n  let seconds = Number(secs);\r\n  const hours = Math.floor(seconds / 3600);\r\n  const minutes = Math.floor(seconds / 60) % 60;\r\n  seconds = Math.floor(seconds) % 60;\r\n  return [hours, minutes, seconds]\r\n      .map((v, i) => v < 10 ? \"0\" + v : v)\r\n      .join(\":\");\r\n};\r\n","import React, { useCallback, useState , useEffect } from \"react\";\r\nimport { readableCounter } from \"../utils\";\r\nimport useAnimationFrame from \"../useAnimationFrame\";\r\nimport \"./Stopwatch.css\";\r\nimport { connect } from 'react-redux';\r\nimport { updateTime } from 'actions/StopWatch';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions, \r\n  Button,\r\n  CircularProgress\r\n} from '@material-ui/core';\r\n\r\nfunction Stopwatch(props) {\r\n  const [time, setTime] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isStartClicked,setStartClicked] = useState(true);\r\n  const [isStopClicked,setStopClicked] = useState(false);\r\n  \r\n  const [startTimer, stopTimer] = useAnimationFrame(delta => \r\n    setTime(prevTime => prevTime + delta / 1000)\r\n  );\r\n\r\n  const handleStopwatchClose = () => {\r\n    props.handleClose();\r\n    props.openAddLogDialog(time);\r\n  };\r\n  \r\n  const handleStartClick = () => {\r\n    if(isStartClicked){\r\n      setProgress(0);\r\n      setStartClicked(false);\r\n    }\r\n    setStopClicked(true);\r\n  };\r\n\r\n  const handleStopClick = () => {\r\n    if(isStopClicked){\r\n      setStopClicked(false);\r\n    }\r\n    setStartClicked(true);\r\n  };\r\n\r\n  const stopAndReset = () => {\r\n    stopTimer();\r\n    setTime(0);\r\n  };\r\n\r\n  const start = () => {\r\n    if(isStartClicked){\r\n      startTimer();\r\n    }\r\n  };\r\n\r\n  const UpdateTime = useCallback(() => {\r\n    props.updateTime(time.toFixed(1)) \r\n  }, [props, time]) \r\n\r\n  useEffect(() => {\r\n    setProgress(props.stopWatchTime%60*5/3)\r\n  }, [props.stopWatchTime])\r\n\r\n  useEffect(() => {\r\n    UpdateTime()\r\n  }, [UpdateTime])\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='md'>\r\n      <DialogActions>\r\n        <Button onClick={props.handleClose} color=\"secondary\">\r\n          <CloseIcon style={{ fontSize: 35 }}/>\r\n        </Button>\r\n      </DialogActions>\r\n      <DialogContent>\r\n        <center>\r\n          <div className=\"clock-inner\">\r\n            <CircularProgress className=\"clock-animation\" thickness={0.5} variant=\"static\" size='25rem' value={progress}/>\r\n            <h1 className=\"timer\">{readableCounter(props.stopWatchTime)}</h1>\r\n            <svg width=\"400\" height=\"400\">\r\n              <circle cx=\"200\" cy=\"200\" r=\"197\" />\r\n              <circle cx=\"200\" cy=\"200\" r=\"187\" />\r\n            </svg>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <div className =  {isStartClicked ? 'circle-button-primary' : 'circle-button-grey'}>\r\n              <svg \r\n              width=\"5em\" \r\n              height=\"5em\" \r\n              viewBox=\"0 0 14 14\"\r\n              onClick={() => { start(); handleStartClick(); }}>\r\n                <path fillRule=\"evenodd\" d=\"M10.804 8L5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z\"></path>\r\n              </svg>\r\n            </div>\r\n            <div className = {isStopClicked ? 'circle-button-red' : 'circle-button-grey'}>\r\n              <svg \r\n              width=\"5em\" \r\n              height=\"5em\" \r\n              viewBox=\"0 0 24 21\"\r\n              onClick={() => { stopAndReset(); handleStopClick(); handleStopwatchClose(); }}>\r\n                <path d=\"M16 8v8H8V8h8m0-2H8c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </center>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stopWatchTime: state.stopWatchTime\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updateTime: (time) => {\r\n      dispatch(updateTime(time))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stopwatch);","export function updateTime(timeString) {\r\n    return {\r\n        type: \"UPDATE_TIME\",\r\n        time: timeString\r\n    }\r\n}","import React from \"react\";\r\nexport default (callback) => {\r\n    const requestRef = React.useRef(0);\r\n    const previousTimeRef = React.useRef(0);\r\n    const _loop = (time = 0) => {\r\n        if (previousTimeRef.current) {\r\n            const deltaTime = time - previousTimeRef.current;\r\n            callback(deltaTime);\r\n        }\r\n        previousTimeRef.current = time;\r\n        requestRef.current = requestAnimationFrame(_loop);\r\n    };\r\n    const start = () => {\r\n        requestRef.current = requestAnimationFrame(_loop);\r\n    };\r\n    const stop = () => {\r\n        previousTimeRef.current = 0;\r\n        cancelAnimationFrame(requestRef.current);\r\n    };\r\n    React.useEffect(() => {\r\n        return stop;\r\n    }, []); \r\n    return [start, stop];\r\n  };","import React from 'react'\r\nimport {\r\n  Drawer,\r\n  List, \r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Button,\r\n  Grid,\r\n  FormControl,\r\n  Divider,\r\n  makeStyles,\r\n  Slide\r\n} from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AvTimerIcon from '@material-ui/icons/AvTimer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport ReportIcon from '@material-ui/icons/Report';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Sidebar.css'\r\nimport AddLog from './AddLog'\r\nimport Duration from './Duration'\r\nimport Stopwatch from './Stopwatch'\r\n\r\nconst drawerWidth = '15vw';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      height: `calc(100%)`,\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n\r\n}));\r\n\r\nfunction Sidebar(props) {\r\n  const classes = useStyles();\r\n  const [logDuration, setLogDuration] = React.useState(3600);\r\n  const [addLogOpen, setAddLogOpen] = React.useState(false);\r\n  const [durationOpen, setDurationOpen] = React.useState(false);\r\n  const [stopwatchOpen, setStopwatchOpen] = React.useState(false);\r\n\r\n  const handleAddLogOpen = (logDuration = 3600) => {\r\n    setAddLogOpen(true);\r\n    setLogDuration(logDuration);\r\n  };\r\n\r\n  const handleAddLogClose = () => {\r\n    setAddLogOpen(false);\r\n  };\r\n\r\n  const handleDurationOpen = () => {\r\n    setDurationOpen(true);\r\n  };\r\n\r\n  const handleDurationClose = () => {\r\n    setDurationOpen(false);\r\n  };\r\n\r\n  const handleStopwatchOpen = () => {\r\n    setStopwatchOpen(true);\r\n  };\r\n\r\n  const handleStopwatchClose = () => {\r\n    setStopwatchOpen(false);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const goToBoard = () => {\r\n    history.push(\"/board\")\r\n  };\r\n\r\n  const goToHistory = () => {\r\n    history.push(\"/history\")\r\n  };\r\n\r\n  const goToActivity = () => {\r\n    history.push(\"/activity\")\r\n  };\r\n\r\n  const goToTimebox = () => {\r\n    history.push(\"/timebox\")\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar}>\r\n      </div>\r\n      <List>\r\n        <div className=\"sidebar-button\">\r\n          <Slide direction=\"right\" in={true} timeout={{appear:500, enter:500, exit:500}}>\r\n            <ListItem className=\"sidebar-list\">\r\n              <Button startIcon={<AddIcon/>}\r\n                className=\"sidebar-list-item\"\r\n                onClick={handleAddLogOpen}\r\n                variant=\"contained\"\r\n                fullWidth={true}\r\n                color=\"primary\" \r\n                >\r\n                Add Log\r\n              </Button>\r\n            </ListItem>\r\n          </Slide>\r\n          <Slide direction=\"right\" in={true} timeout={{appear:800, enter:800, exit:800}}>\r\n          <ListItem className=\"sidebar-list\">\r\n              <Button startIcon={<TimerIcon/>}\r\n                className=\"sidebar-list-item\"\r\n                onClick={handleStopwatchOpen}\r\n                variant=\"contained\"\r\n                fullWidth={true}\r\n                color=\"primary\" \r\n                >\r\n                Stopwatch\r\n              </Button>\r\n            </ListItem>\r\n          </Slide>\r\n          <Slide direction=\"right\" in={true} timeout={{appear:1200, enter:1200, exit:1200}}>\r\n            <ListItem className=\"sidebar-list\">\r\n              <Button startIcon={<AvTimerIcon/>}\r\n                className=\"sidebar-list-item\"\r\n                onClick={handleDurationOpen}\r\n                variant=\"contained\"\r\n                fullWidth={true}\r\n                color=\"primary\" \r\n                >\r\n                Duration\r\n              </Button>\r\n            </ListItem>\r\n          </Slide>\r\n        </div>\r\n        <Slide direction=\"right\" in={true} timeout={{appear:1200, enter:1200, exit:1200}}>\r\n          <ListItem className=\"sidebar-list\">\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={10}>\r\n                  <FormControl className=\"\">\r\n                    <DatePicker\r\n                      autoOk\r\n                      label=\"Start Date\"\r\n                      value={ localStorage.getItem(\"startDate\") }\r\n                      format=\"yyyy/MM/dd\"\r\n                      disabled={true}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </ListItem>\r\n        </Slide>\r\n        <Slide direction=\"right\" in={true} timeout={{appear:1200, enter:1200, exit:1200}}>\r\n          <ListItem className=\"sidebar-list\">\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={10}>\r\n                  <FormControl>\r\n                    <DatePicker\r\n                      autoOk\r\n                      label=\"End Date\"\r\n                      value={ localStorage.getItem(\"endDate\") }\r\n                      format=\"yyyy/MM/dd\"\r\n                      disabled={true}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </ListItem>\r\n        </Slide>\r\n      </List>\r\n      <Divider/>\r\n      <List>\r\n      <Slide direction=\"right\" in={true} timeout={{appear:1500, enter:1500, exit:1500}}>\r\n        <ListItem button key=\"Board\" onClick={goToBoard}>\r\n          <ListItemIcon>{<DashboardIcon />}</ListItemIcon>\r\n          <ListItemText primary=\"Board\" />\r\n        </ListItem>\r\n      </Slide>\r\n      <Slide direction=\"right\" in={true} timeout={{appear:1800, enter:1800, exit:1800}}>\r\n        <ListItem button key=\"History\" onClick={goToHistory}>\r\n          <ListItemIcon>{<HistoryIcon />}</ListItemIcon>\r\n          <ListItemText primary=\"History\" />\r\n        </ListItem>\r\n      </Slide>\r\n      <Slide direction=\"right\" in={true} timeout={{appear:2100, enter:2100, exit:2100}}>\r\n        <ListItem button key=\"Activity\" onClick={goToActivity}>\r\n          <ListItemIcon>{<LibraryBooksIcon />}</ListItemIcon>\r\n          <ListItemText primary=\"Activity\" />\r\n        </ListItem>\r\n      </Slide>\r\n      <Slide direction=\"right\" in={true} timeout={{appear:2400, enter:2400, exit:2400}}>\r\n        <ListItem button key=\"Timebox\" onClick={goToTimebox} style={{display:\"none\"}}>\r\n          <ListItemIcon>{<TimelapseIcon />}</ListItemIcon>\r\n          <ListItemText primary=\"Timebox\" />\r\n        </ListItem>\r\n      </Slide>\r\n      <Divider style={{margin:'25px 20px'}}/>\r\n      <Slide direction=\"right\" in={true} timeout={{appear:2700, enter:2700, exit:2700}}>\r\n        <a className=\"report-button\" href=\"https://github.com/software-system-lab/timelog_web/issues\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <ListItem button key=\"Report Issue\">\r\n            <ListItemIcon>{<ReportIcon color=\"secondary\" />}</ListItemIcon>\r\n            <ListItemText primary=\"Report Issue\" />\r\n          </ListItem>\r\n        </a>\r\n      </Slide>\r\n      </List>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <nav className={classes.drawer}>\r\n      <Drawer\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        variant=\"permanent\"\r\n        open\r\n      >\r\n        {drawer}\r\n      </Drawer>\r\n      <AddLog className=\"AddLog\" duration={logDuration} open={addLogOpen} handleClose={handleAddLogClose}/>\r\n      <Duration className=\"Duration\" open={durationOpen} handleClose={handleDurationClose} startDate={props.startDate} endDate={props.endDate} updateDates={props.updateDates}/>\r\n      <Stopwatch className=\"Stopwatch\" open={stopwatchOpen} handleClose={handleStopwatchClose} openAddLogDialog={handleAddLogOpen} />\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport './UserProfile.css';\r\nimport {\r\n  Avatar,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nexport default function PopoverProfile() {\r\n  const [displayName] = useState(localStorage.getItem(\"displayName\"));\r\n  const [name] = useState(localStorage.getItem(\"cn\"));\r\n  const [email] = useState(localStorage.getItem(\"mail\"));\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    window.location.href = '/';\r\n  }\r\n\r\n  return (\r\n    <center>\r\n      <div className=\"profile-box\">\r\n        <div className=\"profile-split\"></div>\r\n        <Avatar className=\"avatar-name\" alt={displayName} src=\"/broken-image.jpg\"/>\r\n        <div className=\"profile-split\"></div>\r\n        <div>\r\n          <p>{displayName}</p>\r\n          <p>{name}</p>\r\n          <p>{email}</p>\r\n        </div>\r\n        <div className=\"profile-split\"></div>\r\n        <Button \r\n          className = \"logout-btn\" \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          style = {{minWidth : \"6vw\"}}\r\n          onClick = {logout}\r\n          >\r\n            LOGOUT\r\n        </Button>\r\n      </div>\r\n    </center>\r\n  )\r\n}","import React from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Appbar.css';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PopoverProfile from './PopoverProfile';\r\nimport { connect } from 'react-redux';\r\nimport \"./Stopwatch.css\";\r\nimport { readableCounter } from \"../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100%)`,\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      background:'#303030',\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  iconColor: {\r\n    color: '#fff' ,\r\n    backgroundColor: '#00C6CF' ,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  toolBar: {\r\n    justifyContent:'space-between',\r\n  },\r\n  popover: {\r\n    width: '150%',\r\n    height: '150%',\r\n  },\r\n}));\r\n\r\nfunction Appbar(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleDrawerToggle = () => {\r\n    props.handleDrawerToggle();\r\n  };\r\n\r\n  const goToWelcome = () => {\r\n    history.push(\"/welcome\")\r\n  };\r\n\r\n  const [anchorProfile, setAnchorProfile] = React.useState(null);\r\n\r\n  const handleProfileClick = (event) => {\r\n    setAnchorProfile(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileClose = () => {\r\n    setAnchorProfile(null);\r\n  };\r\n \r\n  const displayName = localStorage.getItem(\"displayName\");\r\n  \r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolBar}> \r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          edge=\"start\"\r\n          onClick={handleDrawerToggle}\r\n          className={classes.menuButton}\r\n        >\r\n        <MenuIcon />\r\n        </IconButton>\r\n        <div className=\"appbar-LOGO\">\r\n          <img src=\"TIME_LOG.png\" alt=\"TIMELOG\" onClick={ ()=>{ goToWelcome(); } }>\r\n          </img>\r\n        </div>\r\n        <div className=\"timer-bar\">\r\n          <h1 className=\"timer-header\">{props.timeString === '0.0' ? '': readableCounter(props.timeString)}</h1>\r\n        </div>\r\n        <div className=\"profile-btn\" >\r\n          <Avatar className={classes.iconColor}  alt={displayName} src=\"/broken-image.jpg\" onClick={handleProfileClick} id=\"profile-icon\"/>\r\n          <Popover\r\n            open={Boolean(anchorProfile)}\r\n            margin='100px'\r\n            anchorEl={anchorProfile}\r\n            onClose={handleProfileClose}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            className={classes.popover}\r\n          >\r\n            <PopoverProfile></PopoverProfile>\r\n          </Popover>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    timeString: state.stopWatchTime\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Appbar)","import { createMuiTheme }  from '@material-ui/core/styles'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#08bec7', contrastText: '#fff' },\r\n    secondary: { main: '#ff5f5f' }\r\n  }\r\n})\r\n\r\nexport default theme\r\n","import React, { Component } from 'react';\r\nimport AllRoutes from './routes/allRoutes';\r\nimport Sidebar from './views/Sidebar';\r\nimport Appbar from './views/Appbar';\r\nimport './App.css';\r\nimport { enterTimelog } from 'actions';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport theme from './theme'\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      initConfig: {\r\n        pkceMethod: 'S256',\r\n        onLoad: 'login-required'\r\n      },\r\n      mobileOpen: false,\r\n      startDate: moment().add(-6, 'days').toDate(),\r\n      endDate: moment().toDate()\r\n    }\r\n    localStorage.setItem('startDate', this.state.startDate);\r\n    localStorage.setItem('endDate', this.state.endDate);\r\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\r\n    this.updateDates = this.updateDates.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n      const searchParams = new URLSearchParams(this.props.location.search)\r\n      if (searchParams.get('uid') !== null) {\r\n        localStorage.setItem('uid', searchParams.get('uid'))\r\n        localStorage.setItem('cn', searchParams.get('cn'))\r\n        localStorage.setItem('sn', searchParams.get('sn'))\r\n        localStorage.setItem('givenName', searchParams.get('givenName'))\r\n        localStorage.setItem('displayName', searchParams.get('displayName'))\r\n        localStorage.setItem('mail', searchParams.get('mail'))\r\n      } else {\r\n        if (!!!localStorage.getItem('uid')) {\r\n          var amsURL = process.env.REACT_APP_AMS_LOGIN_URL\r\n          amsURL += '?' + encodeURIComponent('redirect_url=' + window.location.href)\r\n          window.location.replace(amsURL)\r\n          return\r\n        }\r\n      }\r\n      this.props.enterTimelog(localStorage.getItem('uid'), null)\r\n  }\r\n\r\n  handleDrawerToggle () {\r\n    this.setState({\r\n      mobileOpen: !this.mobileOpen\r\n    })\r\n  };\r\n\r\n  updateDates(startDate, endDate){\r\n    this.setState({\r\n      startDate: startDate,\r\n      endDate: endDate\r\n    })\r\n    localStorage.setItem('startDate', startDate)\r\n    localStorage.setItem('endDate', endDate)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <div className=\"container\" style={{maxWidth: '100%'}}>\r\n          <div className=\"view\">\r\n            <Appbar mobileOpen={this.mobileOpen} handleDrawerToggle={this.handleDrawerToggle} />\r\n            <Sidebar mobileOpen={this.mobileOpen} handleDrawerToggle={this.handleDrawerToggle} startDate={this.state.startDate} endDate={this.state.endDate} updateDates={this.updateDates}/>\r\n            <div className=\"main\">\r\n              <AllRoutes startDate={this.state.startDate} endDate={this.state.endDate} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activityTypeList: state.activityTypeList\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    enterTimelog: (userID, token) => dispatch(enterTimelog(userID, token))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const activityTypeListReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case \"SET_ACTIVITY_TYPE_LIST\":{\r\n            return [...action.activityTypeList]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default activityTypeListReducer;\r\n","const HistoryReducer = (state = [], action) => {\r\n  switch(action.type){\r\n    case \"SET_HISTORY\":{\r\n      return [...action.logHistory]\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default HistoryReducer;\r\n","var defaultState = {\r\n  totalTime: \"\",\r\n  pieData: []\r\n}\r\n\r\nconst DashBoardReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_DASH_BOARD\":\r\n      return action.dashBoardData;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default DashBoardReducer;\r\n","const StopWatchReducer = (state = 0, action) => {\r\n    switch(action.type) {\r\n        case \"UPDATE_TIME\":\r\n            return action.time\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default StopWatchReducer;\r\n","import activityTypeListReducer from './activityTypeList'\r\nimport HistoryReducer from './History'\r\nimport DashBoardReducer from './DashBoard'\r\nimport StopWatchReducer from './StopWatch'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    activityTypeList: activityTypeListReducer,\r\n    logHistory: HistoryReducer,\r\n    dashBoardData: DashBoardReducer,\r\n    stopWatchTime: StopWatchReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nconst API_HOST = process.env.REACT_APP_HOST;\r\n\r\nfunction getHeaders(token) {\r\n    return ({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token\r\n    })\r\n}\r\n\r\nfunction getBody(userID) {\r\n    return ({\r\n        userID: userID\r\n    })\r\n}\r\n\r\nfunction paddingLeft (str, len) {\r\n  if (str.toString().length >= len) {\r\n    return str\r\n  } else {\r\n    return paddingLeft('0' + str, len)\r\n  }\r\n}\r\n\r\nfunction getHour (time) {\r\n  return paddingLeft(Math.floor(time / 60), 2)\r\n}\r\n\r\nfunction getMinute (time) {\r\n  return paddingLeft((time % 60).toFixed(0), 2)\r\n}\r\n\r\nconst myMiddleware = store => next => action => {\r\n    if(action.type === \"LOAD_ACTIVITY_TYPE_LIST\") {\r\n        const headers = getHeaders(action.token)\r\n        const body = getBody(action.userID)\r\n        axios.post(API_HOST + '/activity/all', body, { headers: headers })\r\n        .then( response => {\r\n            action.setActivityTypeList(response.data.activityTypeList, store.dispatch)\r\n        })\r\n        .catch( err => {\r\n            console.log(err)\r\n            alert('Load activity type list failed')\r\n        })\r\n    } else if(action.type === \"ENTER_TIMELOG\") {\r\n        const headers = getHeaders(action.token)\r\n        const body = getBody(action.userID)\r\n        axios.post(API_HOST + '/login', body, { headers: headers})\r\n        .then( response => {\r\n            action.setActivityTypeList(response.data.activityTypeList, store.dispatch)\r\n\r\n            body.startDate = moment(localStorage.getItem(\"startDate\")).format(\"YYYY/MM/DD\")\r\n            body.endDate = moment(localStorage.getItem(\"endDate\")).format(\"YYYY/MM/DD\")\r\n\r\n            axios.post(API_HOST + '/log/history', body, {headers: headers})\r\n            .then( response => {\r\n              action.setHistory(response.data.logItemList, store.dispatch);\r\n            })\r\n            .catch ( err => {\r\n              console.log(err)\r\n              alert(\"Get histroy logs failed\");\r\n            })\r\n\r\n            action.loadDashBoard(action.userID, action.token, store.dispatch)\r\n        })\r\n        .catch( err => {\r\n            console.log(err)\r\n            alert(\"Login to timelog failed\")\r\n        })\r\n    } else if(action.type === \"EDIT_ACTIVITY_TYPE\") {\r\n        const headers = getHeaders(action.token)\r\n        const body = {\r\n            userID: action.userID,\r\n            targetActivityTypeName: action.targetActivityTypeName,\r\n            activityTypeName: action.activityTypeName,\r\n            isEnable: action.isEnable,\r\n            isPrivate: action.isPrivate\r\n        }\r\n        axios.post(API_HOST + '/activity/edit', body, { headers: headers})\r\n        .then(response => {\r\n            action.loadActivityTypeList(action.userID, action.token, store.dispatch)\r\n            action.loadLogHistory(action.userID, action.token, store.dispatch)\r\n            action.loadDashBoard(action.userID, action.token, store.dispatch)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert(\"Edit failed\")\r\n        })\r\n    } else if(action.type === \"ADD_ACTIVITY_TYPE\") {\r\n        const headers = getHeaders(action.token)\r\n        const body = {\r\n            userID: action.userID,\r\n            activityTypeName: action.activityTypeName,\r\n            isEnable: action.isEnable,\r\n            isPrivate: action.isPrivate\r\n        }\r\n        axios.post(API_HOST + '/activity/add', body, { headers: headers})\r\n        .then(response => {\r\n            action.loadActivityTypeList(action.userID, action.token, store.dispatch)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert(\"Add activity type failed\")\r\n        })\r\n    } else if (action.type === \"REMOVE_ACTIVITY_TYPE\") {\r\n        const headers = getHeaders(action.token)\r\n        const body = {\r\n            userID: action.userID,\r\n            activityTypeName: action.activityTypeName\r\n        }\r\n        axios.post(API_HOST + '/activity/remove', body, { headers: headers})\r\n        .then(response => {\r\n            action.loadActivityTypeList(action.userID, action.token, store.dispatch)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert(\"Remove activity type failed\")\r\n        })\r\n    } else if(action.type === \"NEW_LOG\") {\r\n        const headers = getHeaders(action.token)\r\n        const body = {\r\n            userID: action.userID,\r\n            title: action.title,\r\n            activityTypeName: action.activityTypeName,\r\n            startTime: action.startTime,\r\n            endTime: action.endTime,\r\n            description: action.description\r\n        }\r\n        axios.post(API_HOST + '/log/record', body, { headers: headers})\r\n        .then(response => {\r\n          action.loadLogHistory(action.userID, action.token, store.dispatch)\r\n          action.loadDashBoard(action.userID, action.token, store.dispatch)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert(\"Add log failed\")\r\n        })\r\n    } else if(action.type === \"LOAD_LOG_HISTORY\") {\r\n        const headers = getHeaders(action.token)\r\n        const body = getBody(action.userID)\r\n        body.startDate = moment(localStorage.getItem(\"startDate\")).format(\"YYYY/MM/DD\")\r\n        body.endDate = moment(localStorage.getItem(\"endDate\")).format(\"YYYY/MM/DD\")\r\n\r\n        axios.post(API_HOST + '/log/history', body, {headers: headers})\r\n        .then( response => {\r\n          action.setHistory(response.data.logItemList, store.dispatch);\r\n        })\r\n        .catch ( err => {\r\n          console.log(err)\r\n          alert(\"Get histroy logs failed\");\r\n        })\r\n    } else if(action.type === \"LOAD_DASH_BOARD\") {\r\n      const headers = getHeaders(action.token)\r\n      const body = getBody(action.userID)\r\n      body.startDate = moment(localStorage.getItem(\"startDate\")).format(\"YYYY/MM/DD\")\r\n      body.endDate = moment(localStorage.getItem(\"endDate\")).format(\"YYYY/MM/DD\")\r\n      axios.post(API_HOST + '/dash-board/spent-time', body, {headers: headers})\r\n      .then( response => {\r\n        const totalTimeString = response.data.totalTime\r\n        const totalTime = parseInt(totalTimeString.split(\":\")[0]) * 60 + parseInt(totalTimeString.split(\":\")[1])\r\n\r\n        const pieData = [\r\n          ['Task', 'Hours per Project']\r\n        ]\r\n        const tableData = []\r\n        const dataMap = response.data.dataMap\r\n        Object.keys(dataMap).forEach((key) => {\r\n          const timeLength = dataMap[key].timeLength\r\n          const percentage = totalTime === 0 ? 0 : (timeLength / totalTime * 100).toFixed(2).toString()\r\n          pieData.push([key, timeLength])\r\n          tableData.push({activityTypeName: key, timeLength: getHour(timeLength) + \" : \" + getMinute(timeLength), percentage: percentage.toString() + \" %\"})\r\n        })\r\n        const result = {\r\n          totalTime: response.data.totalTime,\r\n          pieData: pieData,\r\n          tableData: tableData\r\n        }\r\n        action.setDashBoard(result, store.dispatch)\r\n      })\r\n      .catch ( err => {\r\n        console.log(err)\r\n        alert(\"Get dash board data failed\");\r\n      })\r\n    } else if(action.type === \"UPDATE_DASH_BOARD\") {\r\n      const headers = getHeaders(action.token)\r\n      const body = {\r\n        userID: action.userID,\r\n        filterList: action.filterList}\r\n      body.startDate = moment(localStorage.getItem(\"startDate\")).format(\"YYYY/MM/DD\")\r\n      body.endDate = moment(localStorage.getItem(\"endDate\")).format(\"YYYY/MM/DD\")\r\n      axios.post(API_HOST + '/dash-board/spent-time', body, {headers: headers})\r\n      .then( response => {\r\n        const totalTimeString = response.data.totalTime\r\n        const totalTime = parseInt(totalTimeString.split(\":\")[0]) * 60 + parseInt(totalTimeString.split(\":\")[1])\r\n\r\n        const pieData = [\r\n          ['Task', 'Hours per Project']\r\n        ]\r\n        const tableData = []\r\n        const dataMap = response.data.dataMap\r\n        Object.keys(dataMap).forEach((key) => {\r\n          const timeLength = dataMap[key].timeLength\r\n          const percentage = totalTime === 0 ? 0 : (timeLength / totalTime * 100).toFixed(2).toString()\r\n          pieData.push([key, timeLength])\r\n          tableData.push({activityTypeName: key, timeLength: getHour(timeLength) + \" : \" + getMinute(timeLength), percentage: percentage.toString() + \" %\"})\r\n        })\r\n        const result = {\r\n          totalTime: response.data.totalTime,\r\n          pieData: pieData,\r\n          tableData: tableData\r\n        }\r\n        action.setDashBoard(result, store.dispatch)\r\n      })\r\n      .catch ( err => {\r\n        console.log(err)\r\n        alert(\"Get dash board data failed\");\r\n      })\r\n    } else if(action.type === \"REMOVE_LOG\") {\r\n      const headers = getHeaders(action.token)\r\n      const body = getBody(action.userID)\r\n      body.logID = action.logID\r\n      axios.post(API_HOST + '/log/remove', body, {headers: headers})\r\n      .then(response => {\r\n        action.loadLogHistory(action.userID, action.token, store.dispatch)\r\n        action.loadDashBoard(action.userID, action.token, store.dispatch)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        alert(\"Remove log failed\")\r\n      })\r\n    }  else if(action.type === \"EDIT_LOG\") {\r\n      const headers = getHeaders(action.token)\r\n      const body = {\r\n        userID: action.userID,\r\n        logID: action.logID,\r\n        title: action.title,\r\n        activityTypeName: action.activityTypeName,\r\n        startTime: action.startTime,\r\n        endTime: action.endTime,\r\n        description: action.description\r\n    }\r\n      axios.post(API_HOST + '/log/edit', body, {headers: headers})\r\n      .then(response => {\r\n        action.loadLogHistory(action.userID, action.token, store.dispatch)\r\n        action.loadDashBoard(action.userID, action.token, store.dispatch)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        alert(\"Edit log failed\")\r\n      })\r\n    } else {\r\n        return next(action)\r\n    }\r\n}\r\n\r\nexport default myMiddleware\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport myMiddleware from './middleware'\r\n\r\n// import './assets/css/index.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import './assets/css/animate.min.css';\r\n// import './assets/sass/light-bootstrap-dashboard.css';\r\n// import './assets/css/demo.css';\r\n// import './assets/css/pe-icon-7-stroke.css';\r\n// import 'mdbootstrap/css/mdb.min.css';\r\n// import 'mdbootstrap/css/style.css';\r\n// import 'mdbootstrap/css/addons/datatables.min.css'\r\n\r\nconst myStore = createStore(\r\n  rootReducer,\r\n  applyMiddleware(myMiddleware)\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={myStore}>\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={App}/>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}